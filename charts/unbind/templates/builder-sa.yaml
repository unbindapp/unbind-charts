{{- if .Values.builder.serviceAccount.create }}
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: {{ .Values.global.namespace }}
  name: {{ .Values.builder.serviceAccount.name }}
  labels:
    {{- include "unbind.labels" . | nindent 4 }}
  {{- with .Values.builder.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
---
{{- end }}

{{- if .Values.builder.rbac.create }}
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ .Values.builder.rbac.clusterRoleName }}
  labels:
    {{- include "unbind.labels" . | nindent 4 }}
rules:
- apiGroups: ["unbind.unbind.app"]
  resources: ["services"]
  verbs: ["create", "get", "list", "watch", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ .Values.builder.rbac.clusterRoleBindingName }}
  labels:
    {{- include "unbind.labels" . | nindent 4 }}
subjects:
# Grant permissions to the ServiceAccount defined above (or expected to exist)
- kind: ServiceAccount
  # Name should match the ServiceAccount name from values
  name: {{ .Values.builder.serviceAccount.name }}
  # Namespace should match the ServiceAccount namespace
  # NOTE: Namespace is hardcoded here as 'unbind-system'. Consider making it configurable if needed.
  namespace: unbind-system
roleRef:
  # Link to the ClusterRole defined above
  kind: ClusterRole
  # Name should match the ClusterRole name from values
  name: {{ .Values.builder.rbac.clusterRoleName }}
  apiGroup: rbac.authorization.k8s.io
{{- end }} 